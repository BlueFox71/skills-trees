{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\App Web\\\\skill-tree\\\\src\\\\skillTree\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row } from \"antd\";\nimport styled from \"styled-components\";\nimport Skill from \"./skill\";\nimport { addLeft, addTop } from \"../utils/position\";\nimport { getDataSkillTree } from \"../utils/data\";\nimport Line from \"./line\";\nimport { STATUS_SKILL } from \"../utils/enum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyled = styled.div`\n  position: absolute;\n  top: ${props => props.top};\n  left: ${props => props.left};\n`;\n_c = RootStyled;\nconst SkillTree = ({\n  character,\n  visual,\n  points\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [rootLineColor, setRootLineColor] = useState(\"gray\");\n  const [currentSkills, setCurrentSkills] = useState([]);\n  const [remainingPoints, setRemainingPoints] = useState(points);\n  useEffect(() => {\n    setData(getDataSkillTree(character));\n  }, [character, setData]);\n  const renderSkillTree = useCallback(() => {\n    if (data && character) {\n      const {\n        itemsRoot,\n        itemsFirst,\n        itemsSecond,\n        itemsThird,\n        itemsFourth,\n        lineColor,\n        skillColor\n      } = data;\n      let skills = generateMainBranch(itemsFirst, lineColor, skillColor, 0);\n      skills = [...generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450), ...generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0), ...generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450), ...generateMainBranch(itemsThird, lineColor, skillColor, 0, 480), ...generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900)];\n      setCurrentSkills(skills);\n    }\n  }, [character, data, generateMainBranch]);\n  useEffect(() => {\n    renderSkillTree();\n  }, [renderSkillTree]);\n  const handleSelectSkill = useCallback(item => {\n    console.log(item);\n    if (!visual) {\n      const childrens = currentSkills.filter(x => {\n        var _x$props$item$parentI;\n        return (_x$props$item$parentI = x.props.item.parentId) === null || _x$props$item$parentI === void 0 ? void 0 : _x$props$item$parentI.includes(item.id);\n      });\n      if (item.status === STATUS_SKILL.CAN_BE_SELECTED) {\n        //talent sélectionné\n        setRemainingPoints(remainingPoints - 1);\n        item.status = STATUS_SKILL.IS_SELECTED;\n        childrens.forEach(child => {\n          child.props.item.status = STATUS_SKILL.CAN_BE_SELECTED;\n          if (child.props.item.parentId[0] === item.id) {\n            child.props.item.hasLineColor = true;\n          } else {\n            child.props.item.parentsLines[0].hasLineColor = true;\n          }\n        });\n        if (item.id === \"r-4\") {\n          setRootLineColor(data.lineColor);\n        }\n      } else if (\n      //talent désélectionné\n      item.status === STATUS_SKILL.IS_SELECTED && item.id !== \"r-1\") {\n        let hasSelectedChild = false;\n        childrens.forEach(child => {\n          if (child.props.item.status === STATUS_SKILL.IS_SELECTED) {\n            hasSelectedChild = true;\n          }\n        });\n        if (!hasSelectedChild) {\n          setRemainingPoints(remainingPoints + 1);\n          item.status = STATUS_SKILL.CAN_BE_SELECTED;\n          if (item.id === \"r-4\") {\n            setRootLineColor(\"gray\");\n          }\n          childrens.forEach(child => {\n            child.props.item.status = STATUS_SKILL.CANNOT_BE_SELECTED;\n          });\n        }\n      }\n      renderSkillTree();\n    }\n  }, [currentSkills, data.lineColor, renderSkillTree, remainingPoints, visual]);\n  const getSkill = useCallback((item, top, left, lineColor, skillColor, first) => {\n    return /*#__PURE__*/_jsxDEV(Skill, {\n      item: item,\n      firstSkill: first,\n      top: top,\n      left: left,\n      lineColor: lineColor,\n      skillColor: skillColor,\n      onSelect: handleSelectSkill,\n      visual: visual\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  }, [visual, handleSelectSkill]);\n  const generateNodes = useCallback((item, top, left, parentPosition, skills, lineColor, skillColor) => {\n    if (item.nodes && item.nodes.length > 0) {\n      let topNode = top;\n      let leftNode = left;\n      let parentPositionNode = parentPosition;\n      item.nodes.forEach(item => {\n        topNode += addTop(item.position, parentPositionNode, item.id);\n        leftNode += addLeft(item.position, parentPositionNode, item.id);\n        skills.push(getSkill(item, topNode, leftNode, lineColor, skillColor, false));\n        parentPositionNode = item.position;\n        generateNodes(item, topNode, leftNode + 30, parentPositionNode, skills, lineColor, skillColor);\n      });\n    }\n    return skills;\n  }, [getSkill]);\n  const generateMainBranch = useCallback((items, lineColor, skillColor, topInit, leftInit) => {\n    let top = topInit;\n    let left = leftInit;\n    let parentPosition = null;\n    let first = true;\n    let skills = [];\n    items.forEach(item => {\n      top += addTop(item.position, parentPosition, item.id);\n      left += addLeft(item.position, parentPosition, item.id);\n      parentPosition = item.position;\n      skills.push(getSkill(item, top, left, lineColor, skillColor, first));\n      skills = generateNodes(item, top + 30, left + 15, parentPosition, skills, lineColor, skillColor);\n    });\n    return skills;\n  }, [generateNodes, getSkill]);\n  return currentSkills && currentSkills.length && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"0 auto\",\n      width: \"1000px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          paddingTop: \"350px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(RootStyled, {\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            top: -414,\n            left: 451,\n            color: rootLineColor,\n            rotation: 90,\n            translate: \"0,0\",\n            length: 903\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          id: \"container\",\n          children: currentSkills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 7\n  }, this);\n};\n_s(SkillTree, \"02h952uWOJrNp/0dyukmhBMLXqU=\");\n_c2 = SkillTree;\nSkillTree.propTypes = {\n  character: PropTypes.string,\n  visual: PropTypes.bool,\n  points: PropTypes.number\n};\nexport default SkillTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"RootStyled\");\n$RefreshReg$(_c2, \"SkillTree\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","PropTypes","Col","Row","styled","Skill","addLeft","addTop","getDataSkillTree","Line","STATUS_SKILL","jsxDEV","_jsxDEV","RootStyled","div","props","top","left","_c","SkillTree","character","visual","points","_s","data","setData","rootLineColor","setRootLineColor","currentSkills","setCurrentSkills","remainingPoints","setRemainingPoints","renderSkillTree","itemsRoot","itemsFirst","itemsSecond","itemsThird","itemsFourth","lineColor","skillColor","skills","generateMainBranch","handleSelectSkill","item","console","log","childrens","filter","x","_x$props$item$parentI","parentId","includes","id","status","CAN_BE_SELECTED","IS_SELECTED","forEach","child","hasLineColor","parentsLines","hasSelectedChild","CANNOT_BE_SELECTED","getSkill","first","firstSkill","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","generateNodes","parentPosition","nodes","length","topNode","leftNode","parentPositionNode","position","push","items","topInit","leftInit","style","margin","width","children","paddingTop","color","rotation","translate","_c2","propTypes","string","bool","number","$RefreshReg$"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/index.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Skill from \"./skill\";\r\nimport { addLeft, addTop } from \"../utils/position\";\r\nimport { getDataSkillTree } from \"../utils/data\";\r\nimport Line from \"./line\";\r\nimport { STATUS_SKILL } from \"../utils/enum\";\r\n\r\nconst RootStyled = styled.div`\r\n  position: absolute;\r\n  top: ${(props) => props.top};\r\n  left: ${(props) => props.left};\r\n`;\r\n\r\nconst SkillTree = ({ character, visual, points }) => {\r\n  const [data, setData] = useState(null);\r\n  const [rootLineColor, setRootLineColor] = useState(\"gray\");\r\n  const [currentSkills, setCurrentSkills] = useState([]);\r\n  const [remainingPoints, setRemainingPoints] = useState(points);\r\n\r\n  useEffect(() => {\r\n    setData(getDataSkillTree(character));\r\n  }, [character, setData]);\r\n\r\n  const renderSkillTree = useCallback(() => {\r\n    if (data && character) {\r\n      const {\r\n        itemsRoot,\r\n        itemsFirst,\r\n        itemsSecond,\r\n        itemsThird,\r\n        itemsFourth,\r\n        lineColor,\r\n        skillColor,\r\n      } = data;\r\n      let skills = generateMainBranch(itemsFirst, lineColor, skillColor, 0);\r\n      skills = [\r\n        ...generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450),\r\n        ...generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0),\r\n        ...generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450),\r\n        ...generateMainBranch(itemsThird, lineColor, skillColor, 0, 480),\r\n        ...generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900),\r\n      ];\r\n      setCurrentSkills(skills);\r\n    }\r\n  }, [character, data, generateMainBranch]);\r\n\r\n  useEffect(() => {\r\n    renderSkillTree();\r\n  }, [renderSkillTree]);\r\n\r\n  const handleSelectSkill = useCallback(\r\n    (item) => {\r\n      console.log(item);\r\n      if (!visual) {\r\n        const childrens = currentSkills.filter((x) =>\r\n          x.props.item.parentId?.includes(item.id)\r\n        );\r\n        if (item.status === STATUS_SKILL.CAN_BE_SELECTED) {\r\n          //talent sélectionné\r\n          setRemainingPoints(remainingPoints - 1);\r\n          item.status = STATUS_SKILL.IS_SELECTED;\r\n          childrens.forEach((child) => {\r\n            child.props.item.status = STATUS_SKILL.CAN_BE_SELECTED;\r\n            if (child.props.item.parentId[0] === item.id) {\r\n              child.props.item.hasLineColor = true;\r\n            } else {\r\n              child.props.item.parentsLines[0].hasLineColor = true;\r\n            }\r\n          });\r\n          if (item.id === \"r-4\") {\r\n            setRootLineColor(data.lineColor);\r\n          }\r\n        } else if (\r\n          //talent désélectionné\r\n          item.status === STATUS_SKILL.IS_SELECTED &&\r\n          item.id !== \"r-1\"\r\n        ) {\r\n          let hasSelectedChild = false;\r\n          childrens.forEach((child) => {\r\n            if (child.props.item.status === STATUS_SKILL.IS_SELECTED) {\r\n              hasSelectedChild = true;\r\n            }\r\n          });\r\n          if (!hasSelectedChild) {\r\n            setRemainingPoints(remainingPoints + 1);\r\n            item.status = STATUS_SKILL.CAN_BE_SELECTED;\r\n            if (item.id === \"r-4\") {\r\n              setRootLineColor(\"gray\");\r\n            }\r\n            childrens.forEach((child) => {\r\n              child.props.item.status = STATUS_SKILL.CANNOT_BE_SELECTED;\r\n            });\r\n          }\r\n        }\r\n        renderSkillTree();\r\n      }\r\n    },\r\n    [currentSkills, data.lineColor, renderSkillTree, remainingPoints, visual]\r\n  );\r\n\r\n  const getSkill = useCallback(\r\n    (item, top, left, lineColor, skillColor, first) => {\r\n      return (\r\n        <Skill\r\n          key={item.id}\r\n          item={item}\r\n          firstSkill={first}\r\n          top={top}\r\n          left={left}\r\n          lineColor={lineColor}\r\n          skillColor={skillColor}\r\n          onSelect={handleSelectSkill}\r\n          visual={visual}\r\n        />\r\n      );\r\n    },\r\n    [visual, handleSelectSkill]\r\n  );\r\n\r\n  const generateNodes = useCallback(\r\n    (item, top, left, parentPosition, skills, lineColor, skillColor) => {\r\n      if (item.nodes && item.nodes.length > 0) {\r\n        let topNode = top;\r\n        let leftNode = left;\r\n        let parentPositionNode = parentPosition;\r\n        item.nodes.forEach((item) => {\r\n          topNode += addTop(item.position, parentPositionNode, item.id);\r\n          leftNode += addLeft(item.position, parentPositionNode, item.id);\r\n          skills.push(\r\n            getSkill(item, topNode, leftNode, lineColor, skillColor, false)\r\n          );\r\n          parentPositionNode = item.position;\r\n          generateNodes(\r\n            item,\r\n            topNode,\r\n            leftNode + 30,\r\n            parentPositionNode,\r\n            skills,\r\n            lineColor,\r\n            skillColor\r\n          );\r\n        });\r\n      }\r\n      return skills;\r\n    },\r\n    [getSkill]\r\n  );\r\n\r\n  const generateMainBranch = useCallback(\r\n    (items, lineColor, skillColor, topInit, leftInit) => {\r\n      let top = topInit;\r\n      let left = leftInit;\r\n      let parentPosition = null;\r\n      let first = true;\r\n      let skills = [];\r\n\r\n      items.forEach((item) => {\r\n        top += addTop(item.position, parentPosition, item.id);\r\n        left += addLeft(item.position, parentPosition, item.id);\r\n        parentPosition = item.position;\r\n\r\n        skills.push(getSkill(item, top, left, lineColor, skillColor, first));\r\n        skills = generateNodes(\r\n          item,\r\n          top + 30,\r\n          left + 15,\r\n          parentPosition,\r\n          skills,\r\n          lineColor,\r\n          skillColor\r\n        );\r\n      });\r\n      return skills;\r\n    },\r\n    [generateNodes, getSkill]\r\n  );\r\n\r\n  return (\r\n    currentSkills &&\r\n    currentSkills.length && (\r\n      <div style={{ margin: \"0 auto\", width: \"1000px\" }}>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              paddingTop: \"350px\",\r\n            }}\r\n          >\r\n            <RootStyled>\r\n              <Line\r\n                top={-414}\r\n                left={451}\r\n                color={rootLineColor}\r\n                rotation={90}\r\n                translate={\"0,0\"}\r\n                length={903}\r\n              />\r\n            </RootStyled>\r\n            <div style={{ position: \"relative\" }} id=\"container\">\r\n              {currentSkills}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nSkillTree.propTypes = {\r\n  character: PropTypes.string,\r\n  visual: PropTypes.bool,\r\n  points: PropTypes.number,\r\n};\r\n\r\nexport default SkillTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}