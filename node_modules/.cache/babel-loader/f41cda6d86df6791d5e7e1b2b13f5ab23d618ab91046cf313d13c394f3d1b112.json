{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\App Web\\\\skill-tree\\\\src\\\\menu\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Col, Divider, Form, Row } from \"antd\";\nimport { CHARACTER_CLASS } from \"../utils/enum\";\nimport { useState } from \"react\";\nimport SkillTree from \"../skillTree\";\nimport styled from \"styled-components\";\nimport backgroundPaladin from \"../asserts/images/paladin/background_paladin_filter.png\";\nimport { getDataSkillTree } from \"../utils/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SectionSkillTree = styled.section`\n  background-image: url(${backgroundPaladin});\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 1800px;\n  opacity: 1;\n`;\n_c = SectionSkillTree;\nconst Menu = () => {\n  _s();\n  const [character, setCharacter] = useState(null);\n  const [points, setPoints] = useState(null);\n  const [visual, setVisual] = useState(true);\n  const [data, setData] = useState(null);\n  const [simulationInProgress, setSimulationInProgress] = useState(false);\n  const buttons = [{}];\n  const handleChooseCharacter = classCharacter => {\n    setCharacter(classCharacter);\n    setData(getDataSkillTree(character));\n  };\n  const handleStart = () => {\n    setSimulationInProgress(true);\n    setPoints(data.count);\n    setVisual(false);\n  };\n  const handleReset = () => {\n    setPoints(data.count);\n    setSimulationInProgress(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#272a35\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-menu paladin\",\n          onClick: () => handleChooseCharacter(CHARACTER_CLASS.GUERRIER),\n          children: \"Guerrier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-menu paladin\",\n          onClick: () => handleChooseCharacter(CHARACTER_CLASS.PALADIN),\n          children: \"Paladin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), character && data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          backgroundColor: data.primaryColor,\n          padding: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            height: \"35px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            justify: \"start\",\n            children: !simulationInProgress ? /*#__PURE__*/_jsxDEV(Col, {\n              span: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleStart,\n                  children: \"Commencer la simulation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Col, {\n              span: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleReset,\n                  children: \"R\\xE9initialiser l'arbre\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SectionSkillTree, {\n        id: \"container-skill-tree\",\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SkillTree, {\n          points: points,\n          character: character,\n          data: data,\n          visual: visual,\n          simulationInProgress: simulationInProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Menu, \"j5YFtKBkcZ7d//xAXe6JjvWRBrw=\");\n_c2 = Menu;\nexport default Menu;\nvar _c, _c2;\n$RefreshReg$(_c, \"SectionSkillTree\");\n$RefreshReg$(_c2, \"Menu\");","map":{"version":3,"names":["Button","Col","Divider","Form","Row","CHARACTER_CLASS","useState","SkillTree","styled","backgroundPaladin","getDataSkillTree","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionSkillTree","section","_c","Menu","_s","character","setCharacter","points","setPoints","visual","setVisual","data","setData","simulationInProgress","setSimulationInProgress","buttons","handleChooseCharacter","classCharacter","handleStart","count","handleReset","style","backgroundColor","children","align","className","onClick","GUERRIER","fileName","_jsxFileName","lineNumber","columnNumber","PALADIN","primaryColor","padding","height","justify","span","Item","id","width","_c2","$RefreshReg$"],"sources":["D:/Documents/App Web/skill-tree/src/menu/index.jsx"],"sourcesContent":["import { Button, Col, Divider, Form, Row } from \"antd\";\r\nimport { CHARACTER_CLASS } from \"../utils/enum\";\r\nimport { useState } from \"react\";\r\n\r\nimport SkillTree from \"../skillTree\";\r\nimport styled from \"styled-components\";\r\nimport backgroundPaladin from \"../asserts/images/paladin/background_paladin_filter.png\";\r\nimport { getDataSkillTree } from \"../utils/data\";\r\n\r\nconst SectionSkillTree = styled.section`\r\n  background-image: url(${backgroundPaladin});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: 1800px;\r\n  opacity: 1;\r\n`;\r\n\r\nconst Menu = () => {\r\n  const [character, setCharacter] = useState(null);\r\n  const [points, setPoints] = useState(null);\r\n  const [visual, setVisual] = useState(true);\r\n  const [data, setData] = useState(null);\r\n  const [simulationInProgress, setSimulationInProgress] = useState(false);\r\nconst buttons = [\r\n  {}\r\n]\r\n  const handleChooseCharacter = (classCharacter) => {\r\n    setCharacter(classCharacter);\r\n    setData(getDataSkillTree(character));\r\n  };\r\n\r\n  const handleStart = () => {\r\n    setSimulationInProgress(true);\r\n    setPoints(data.count);\r\n    setVisual(false);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setPoints(data.count);\r\n    setSimulationInProgress(false);\r\n  };\r\n  return (\r\n    <div style={{ backgroundColor: \"#272a35\" }}>\r\n      <section>\r\n        <Row align={\"center\"}>\r\n          <Button\r\n            className=\"button-menu paladin\"\r\n            onClick={() => handleChooseCharacter(CHARACTER_CLASS.GUERRIER)}\r\n          >\r\n            Guerrier\r\n          </Button>\r\n          <Button\r\n            className=\"button-menu paladin\"\r\n            onClick={() => handleChooseCharacter(CHARACTER_CLASS.PALADIN)}\r\n          >\r\n            Paladin\r\n          </Button>\r\n          <Divider />\r\n        </Row>\r\n      </section>\r\n      {character && data && (\r\n        <>\r\n          <section\r\n            style={{ backgroundColor: data.primaryColor, padding: \"10px\" }}\r\n          >\r\n            <Form style={{ height: \"35px\" }}>\r\n              <Row justify={\"start\"}>\r\n                {!simulationInProgress ? (\r\n                  <Col span={4}>\r\n                    <Form.Item>\r\n                      <Button onClick={handleStart}>\r\n                        Commencer la simulation\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </Col>\r\n                ) : (\r\n                  <Col span={4}>\r\n                    <Form.Item>\r\n                      <Button onClick={handleReset}>\r\n                        RÃ©initialiser l'arbre\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Form>\r\n          </section>\r\n          <SectionSkillTree id=\"container-skill-tree\" style={{ width: \"100%\" }}>\r\n            <SkillTree\r\n              points={points}\r\n              character={character}\r\n              data={data}\r\n              visual={visual}\r\n              simulationInProgress={simulationInProgress}\r\n            />\r\n          </SectionSkillTree>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}