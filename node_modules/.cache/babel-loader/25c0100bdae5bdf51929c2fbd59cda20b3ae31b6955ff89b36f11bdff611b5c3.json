{"ast":null,"code":"import { addLeft, addTop } from \"./position\";\nexport const generateNodes = (item, top, left, parentPosition, skills, lineColor, skillColor) => {\n  if (item.nodes && item.nodes.length > 0) {\n    let topNode = top;\n    let leftNode = left;\n    let parentPositionNode = parentPosition;\n    item.nodes.forEach(item => {\n      topNode += addTop(item.position, parentPositionNode, item.id);\n      leftNode += addLeft(item.position, parentPositionNode, item.id);\n      skills.push(getSkill(item, topNode, leftNode, lineColor, skillColor, false));\n      parentPositionNode = item.position;\n      generateNodes(item, topNode, leftNode + 30, parentPositionNode, skills, lineColor, skillColor);\n    });\n  }\n  return skills;\n};","map":{"version":3,"names":["addLeft","addTop","generateNodes","item","top","left","parentPosition","skills","lineColor","skillColor","nodes","length","topNode","leftNode","parentPositionNode","forEach","position","id","push","getSkill"],"sources":["D:/Documents/App Web/skill-tree/src/utils/branch.js"],"sourcesContent":["import { addLeft, addTop } from \"./position\";\r\n\r\nexport const generateNodes = (\r\n    item,\r\n    top,\r\n    left,\r\n    parentPosition,\r\n    skills,\r\n    lineColor,\r\n    skillColor\r\n  ) => {\r\n    if (item.nodes && item.nodes.length > 0) {\r\n      let topNode = top;\r\n      let leftNode = left;\r\n      let parentPositionNode = parentPosition;\r\n      item.nodes.forEach((item) => {\r\n        topNode += addTop(item.position, parentPositionNode, item.id);\r\n        leftNode += addLeft(item.position, parentPositionNode, item.id);\r\n        skills.push(\r\n          getSkill(item, topNode, leftNode, lineColor, skillColor, false)\r\n        );\r\n        parentPositionNode = item.position;\r\n        generateNodes(\r\n          item,\r\n          topNode,\r\n          leftNode + 30,\r\n          parentPositionNode,\r\n          skills,\r\n          lineColor,\r\n          skillColor\r\n        );\r\n      });\r\n    }\r\n    return skills;\r\n  };\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,QAAQ,YAAY;AAE5C,OAAO,MAAMC,aAAa,GAAGA,CACzBC,IAAI,EACJC,GAAG,EACHC,IAAI,EACJC,cAAc,EACdC,MAAM,EACNC,SAAS,EACTC,UAAU,KACP;EACH,IAAIN,IAAI,CAACO,KAAK,IAAIP,IAAI,CAACO,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IACvC,IAAIC,OAAO,GAAGR,GAAG;IACjB,IAAIS,QAAQ,GAAGR,IAAI;IACnB,IAAIS,kBAAkB,GAAGR,cAAc;IACvCH,IAAI,CAACO,KAAK,CAACK,OAAO,CAAEZ,IAAI,IAAK;MAC3BS,OAAO,IAAIX,MAAM,CAACE,IAAI,CAACa,QAAQ,EAAEF,kBAAkB,EAAEX,IAAI,CAACc,EAAE,CAAC;MAC7DJ,QAAQ,IAAIb,OAAO,CAACG,IAAI,CAACa,QAAQ,EAAEF,kBAAkB,EAAEX,IAAI,CAACc,EAAE,CAAC;MAC/DV,MAAM,CAACW,IAAI,CACTC,QAAQ,CAAChB,IAAI,EAAES,OAAO,EAAEC,QAAQ,EAAEL,SAAS,EAAEC,UAAU,EAAE,KAAK,CAChE,CAAC;MACDK,kBAAkB,GAAGX,IAAI,CAACa,QAAQ;MAClCd,aAAa,CACXC,IAAI,EACJS,OAAO,EACPC,QAAQ,GAAG,EAAE,EACbC,kBAAkB,EAClBP,MAAM,EACNC,SAAS,EACTC,UACF,CAAC;IACH,CAAC,CAAC;EACJ;EACA,OAAOF,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}