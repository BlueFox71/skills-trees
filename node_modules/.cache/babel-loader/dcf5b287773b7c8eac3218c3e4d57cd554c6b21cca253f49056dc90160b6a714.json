{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\App Web\\\\skill-tree\\\\src\\\\skillTree\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row } from \"antd\";\nimport styled from \"styled-components\";\nimport Skill from \"./skill\";\nimport { addLeft, addTop } from \"../utils/position\";\nimport { getDataSkillTree } from \"../utils/data\";\nimport Line from \"./line\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyled = styled.div`\n  position: absolute;\n  top: ${props => props.top};\n  left: ${props => props.left};\n`;\n_c = RootStyled;\nconst SkillTree = ({\n  character,\n  visual,\n  points\n}) => {\n  _s();\n  var _data$itemsRoot;\n  const [data, setData] = useState(null);\n  const [remainingPoints, setRemainingPoints] = useState(points);\n  const renderSkillTree = () => {\n    const {\n      itemsRoot,\n      itemsFirst,\n      itemsSecond,\n      itemsThird,\n      itemsFourth,\n      lineColor,\n      skillColor\n    } = data;\n    let skills = generateMainBranch(itemsFirst, lineColor, skillColor, 0);\n    skills = [generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450), generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0), generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450), generateMainBranch(itemsThird, lineColor, skillColor, 0, 480), generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900)];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: skills\n    }, void 0, false);\n  };\n  const handleCheckedSkill = checked => {\n    if (checked) {\n      setRemainingPoints(remainingPoints - 1);\n    } else {\n      setRemainingPoints(remainingPoints + 1);\n    }\n  };\n  useEffect(() => {\n    setData(getDataSkillTree(character));\n  }, [character, setData]);\n  const getSkill = (item, top, left, lineColor, skillColor, first) => {\n    return /*#__PURE__*/_jsxDEV(Skill, {\n      item: item,\n      top: top,\n      left: left,\n      lineColor: lineColor,\n      skillColor: skillColor,\n      onSelect: handleCheckedSkill,\n      visual: visual\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n  const generateNodes = (item, top, left, parentPosition, skills, lineColor, skillColor) => {\n    if (item.nodes && item.nodes.length > 0) {\n      let topNode = top;\n      let leftNode = left;\n      let parentPositionNode = parentPosition;\n      item.nodes.forEach(item => {\n        topNode += addTop(item.position, parentPositionNode, item.id);\n        leftNode += addLeft(item.position, parentPositionNode, item.id);\n        skills.push(getSkill(item, topNode, leftNode, lineColor, skillColor, false));\n        parentPositionNode = item.position;\n        generateNodes(item, topNode, leftNode + 30, parentPositionNode, skills, lineColor, skillColor);\n      });\n    }\n    return skills;\n  };\n  const generateMainBranch = (items, lineColor, skillColor, topInit, leftInit) => {\n    let top = topInit;\n    let left = leftInit;\n    let parentPosition = null;\n    let first = true;\n    let skills = [];\n    items.forEach(item => {\n      top += addTop(item.position, parentPosition, item.id);\n      left += addLeft(item.position, parentPosition, item.id);\n      parentPosition = item.position;\n      skills.push(getSkill(item, top, left, lineColor, skillColor, first));\n      skills = generateNodes(item, top + 30, left + 15, parentPosition, skills, lineColor, skillColor);\n    });\n    return skills;\n  };\n  console.log(data);\n  return data && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"0 auto\",\n      width: \"1000px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          paddingTop: \"350px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(RootStyled, {\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            top: -414,\n            left: 451,\n            color: visual || data !== null && data !== void 0 && (_data$itemsRoot = data.itemsRoot) !== null && _data$itemsRoot !== void 0 && _data$itemsRoot.find(item => item.id === \"r-4\").isSelect ? data.lineColor : \"gray\",\n            rotation: 90,\n            translate: \"0,0\",\n            length: 903\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          id: \"container\",\n          children: renderSkillTree()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 7\n  }, this);\n};\n_s(SkillTree, \"Capab4ng3+psE78OoHNf8u4h+BQ=\");\n_c2 = SkillTree;\nSkillTree.propTypes = {\n  character: PropTypes.string,\n  visual: PropTypes.bool,\n  points: PropTypes.number\n};\nexport default SkillTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"RootStyled\");\n$RefreshReg$(_c2, \"SkillTree\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","Col","Row","styled","Skill","addLeft","addTop","getDataSkillTree","Line","Fragment","_Fragment","jsxDEV","_jsxDEV","RootStyled","div","props","top","left","_c","SkillTree","character","visual","points","_s","_data$itemsRoot","data","setData","remainingPoints","setRemainingPoints","renderSkillTree","itemsRoot","itemsFirst","itemsSecond","itemsThird","itemsFourth","lineColor","skillColor","skills","generateMainBranch","children","handleCheckedSkill","checked","getSkill","item","first","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","generateNodes","parentPosition","nodes","length","topNode","leftNode","parentPositionNode","forEach","position","id","push","items","topInit","leftInit","console","log","style","margin","width","paddingTop","color","find","isSelect","rotation","translate","_c2","propTypes","string","bool","number","$RefreshReg$"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Skill from \"./skill\";\r\nimport { addLeft, addTop } from \"../utils/position\";\r\nimport { getDataSkillTree } from \"../utils/data\";\r\nimport Line from \"./line\";\r\n\r\nconst RootStyled = styled.div`\r\n  position: absolute;\r\n  top: ${(props) => props.top};\r\n  left: ${(props) => props.left};\r\n`;\r\n\r\nconst SkillTree = ({ character, visual, points }) => {\r\n  const [data, setData] = useState(null);\r\n  const [remainingPoints, setRemainingPoints] = useState(points);\r\n  const renderSkillTree = () => {\r\n    const {\r\n      itemsRoot,\r\n      itemsFirst,\r\n      itemsSecond,\r\n      itemsThird,\r\n      itemsFourth,\r\n      lineColor,\r\n      skillColor,\r\n    } = data;\r\n    let skills = generateMainBranch(itemsFirst, lineColor, skillColor, 0);\r\n    skills = [\r\n      generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450),\r\n      generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0),\r\n      generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450),\r\n      generateMainBranch(itemsThird, lineColor, skillColor, 0, 480),\r\n      generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900),\r\n    ];\r\n\r\n    return <>{skills}</>;\r\n  };\r\n\r\n  const handleCheckedSkill = (checked) => {\r\n    if (checked) {\r\n      setRemainingPoints(remainingPoints - 1);\r\n    } else {\r\n      setRemainingPoints(remainingPoints + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(getDataSkillTree(character));\r\n  }, [character, setData]);\r\n\r\n  const getSkill = (item, top, left, lineColor, skillColor, first) => {\r\n    return (\r\n      <Skill\r\n        item={item}\r\n        top={top}\r\n        left={left}\r\n        lineColor={lineColor}\r\n        skillColor={skillColor}\r\n        onSelect={handleCheckedSkill}\r\n        visual={visual}\r\n      />\r\n    );\r\n  };\r\n\r\n  const generateNodes = (\r\n    item,\r\n    top,\r\n    left,\r\n    parentPosition,\r\n    skills,\r\n    lineColor,\r\n    skillColor\r\n  ) => {\r\n    if (item.nodes && item.nodes.length > 0) {\r\n      let topNode = top;\r\n      let leftNode = left;\r\n      let parentPositionNode = parentPosition;\r\n      item.nodes.forEach((item) => {\r\n        topNode += addTop(item.position, parentPositionNode, item.id);\r\n        leftNode += addLeft(item.position, parentPositionNode, item.id);\r\n        skills.push(\r\n          getSkill(item, topNode, leftNode, lineColor, skillColor, false)\r\n        );\r\n        parentPositionNode = item.position;\r\n        generateNodes(\r\n          item,\r\n          topNode,\r\n          leftNode + 30,\r\n          parentPositionNode,\r\n          skills,\r\n          lineColor,\r\n          skillColor\r\n        );\r\n      });\r\n    }\r\n    return skills;\r\n  };\r\n\r\n  const generateMainBranch = (\r\n    items,\r\n    lineColor,\r\n    skillColor,\r\n    topInit,\r\n    leftInit\r\n  ) => {\r\n    let top = topInit;\r\n    let left = leftInit;\r\n    let parentPosition = null;\r\n    let first = true;\r\n    let skills = [];\r\n\r\n    items.forEach((item) => {\r\n      top += addTop(item.position, parentPosition, item.id);\r\n      left += addLeft(item.position, parentPosition, item.id);\r\n      parentPosition = item.position;\r\n\r\n      skills.push(getSkill(item, top, left, lineColor, skillColor, first));\r\n      skills = generateNodes(\r\n        item,\r\n        top + 30,\r\n        left + 15,\r\n        parentPosition,\r\n        skills,\r\n        lineColor,\r\n        skillColor\r\n      );\r\n    });\r\n    return skills;\r\n  };\r\n  console.log(data);\r\n  return (\r\n    data && (\r\n      <div style={{ margin: \"0 auto\", width: \"1000px\" }}>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              paddingTop: \"350px\",\r\n            }}\r\n          >\r\n            <RootStyled>\r\n              <Line\r\n                top={-414}\r\n                left={451}\r\n                color={\r\n                  visual ||\r\n                  data?.itemsRoot?.find((item) => item.id === \"r-4\").isSelect\r\n                    ? data.lineColor\r\n                    : \"gray\"\r\n                }\r\n                rotation={90}\r\n                translate={\"0,0\"}\r\n                length={903}\r\n              />\r\n            </RootStyled>\r\n            <div style={{ position: \"relative\" }} id=\"container\">\r\n              {renderSkillTree()}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nSkillTree.propTypes = {\r\n  character: PropTypes.string,\r\n  visual: PropTypes.bool,\r\n  points: PropTypes.number,\r\n};\r\n\r\nexport default SkillTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}