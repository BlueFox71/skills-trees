{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/Documents/App Web/skill-tree/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from\"react\";import styled from\"styled-components\";import{Button,Col,Divider,Row,Tooltip,message}from\"antd\";import{CopyOutlined}from\"@ant-design/icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const BlocStyled=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 30px;\\n  left: -400px;\\n  background-color: white;\\n  width: 500px;\\n  height: 200px;\\n  font-size: 25px;\\n  border-radius: 5px;\\n\"])));const DivLevel=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-size: 50px;\\n  text-align: center;\\n  margin: 20px;\\n\"])));const DivPoints=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 20px;\\n  text-align: center;\\n  margin: 2px;\\n  opacity: 1;\\n\"])));const StyledImage=styled.img(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 35px;\\n  height: 35px;\\n  margin: 2px;\\n  border: 2px solid \",\";\\n  border-radius: \",\"px;\\n\"])),props=>props.color,props=>props.isSquare?\"0\":\"50\");const DashBoard=_ref=>{let{remainingPoints,selectedSkills,level,simulationInProgress,skillColor}=_ref;const[messageApi,contextHolder]=message.useMessage();const handleCopied=()=>{let res=\"Sorts :\\n\";selectedSkills.filter(item=>item.isSquare).forEach(item=>{res+=\"  - \"+item.text+\"\\n\";});res+=\"\\nPassives :\\n\";selectedSkills.filter(item=>!item.isSquare).forEach(item=>{res+=\"  - \"+item.text+\"\\n\";});navigator.clipboard.writeText(res);messageApi.open({type:\"success\",content:\"Liste des talents copiés !\"});};return simulationInProgress&&/*#__PURE__*/_jsxs(_Fragment,{children:[contextHolder,/*#__PURE__*/_jsx(BlocStyled,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{span:10,children:[/*#__PURE__*/_jsx(DivLevel,{children:\"Niv. \".concat(level)}),/*#__PURE__*/_jsx(Divider,{style:{margin:0}}),/*#__PURE__*/_jsxs(DivPoints,{children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:600},children:remainingPoints}),\" \",\"points restantes \\xE0 d\\xE9penser\"]})]}),/*#__PURE__*/_jsx(Button,{style:{position:\"absolute\",left:\"175px\"},icon:/*#__PURE__*/_jsx(CopyOutlined,{}),disabled:selectedSkills.length===0,onClick:handleCopied}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(\"div\",{style:{overflow:\"auto\",width:\"288px\",height:\"97px\"},children:selectedSkills.map(item=>item.isSquare&&/*#__PURE__*/_jsx(Tooltip,{title:item.text,placement:\"bottom\",children:/*#__PURE__*/_jsx(StyledImage,{color:skillColor,isSquare:item.isSquare,src:require(\"../../asserts/images/paladin/\".concat(item.image,\".jpg\"))})}))}),/*#__PURE__*/_jsx(Divider,{style:{margin:0}}),/*#__PURE__*/_jsx(\"div\",{style:{overflow:\"auto\",width:\"288px\",height:\"97px\"},children:selectedSkills.map(item=>!item.isSquare&&/*#__PURE__*/_jsx(Tooltip,{title:item.text,placement:\"bottom\",children:/*#__PURE__*/_jsx(StyledImage,{color:skillColor,isSquare:item.isSquare,src:require(\"../../asserts/images/paladin/\".concat(item.image,\".jpg\"))})}))})]})]})})]});};export default DashBoard;","map":{"version":3,"names":["React","styled","Button","Col","Divider","Row","Tooltip","message","CopyOutlined","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BlocStyled","div","_templateObject","_taggedTemplateLiteral","DivLevel","_templateObject2","DivPoints","_templateObject3","StyledImage","img","_templateObject4","props","color","isSquare","DashBoard","_ref","remainingPoints","selectedSkills","level","simulationInProgress","skillColor","messageApi","contextHolder","useMessage","handleCopied","res","filter","item","forEach","text","navigator","clipboard","writeText","open","type","content","children","span","concat","style","margin","fontWeight","position","left","icon","disabled","length","onClick","overflow","width","height","map","title","placement","src","require","image"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/dashboard/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Divider, Row, Tooltip, message } from \"antd\";\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\n\r\nconst BlocStyled = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: -400px;\r\n  background-color: white;\r\n  width: 500px;\r\n  height: 200px;\r\n  font-size: 25px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst DivLevel = styled.div`\r\n  font-size: 50px;\r\n  text-align: center;\r\n  margin: 20px;\r\n`;\r\n\r\nconst DivPoints = styled.div`\r\n  font-size: 20px;\r\n  text-align: center;\r\n  margin: 2px;\r\n  opacity: 1;\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n  position: relative;\r\n  width: 35px;\r\n  height: 35px;\r\n  margin: 2px;\r\n  border: 2px solid ${(props) => props.color};\r\n  border-radius: ${(props) => (props.isSquare ? \"0\" : \"50\")}px;\r\n`;\r\n\r\nconst DashBoard = ({\r\n  remainingPoints,\r\n  selectedSkills,\r\n  level,\r\n  simulationInProgress,\r\n  skillColor,\r\n}) => {\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n  const handleCopied = () => {\r\n    let res = \"Sorts :\\n\";\r\n    selectedSkills\r\n      .filter((item) => item.isSquare)\r\n      .forEach((item) => {\r\n        res += \"  - \" + item.text + \"\\n\";\r\n      });\r\n    res += \"\\nPassives :\\n\";\r\n    selectedSkills\r\n      .filter((item) => !item.isSquare)\r\n      .forEach((item) => {\r\n        res += \"  - \" + item.text + \"\\n\";\r\n      });\r\n    navigator.clipboard.writeText(res);\r\n\r\n    messageApi.open({\r\n      type: \"success\",\r\n      content: \"Liste des talents copiés !\",\r\n    });\r\n  };\r\n  return (\r\n    simulationInProgress && (\r\n      <>\r\n        {contextHolder}\r\n        <BlocStyled>\r\n          <Row>\r\n            <Col span={10}>\r\n              <DivLevel>{`Niv. ${level}`}</DivLevel>\r\n              <Divider style={{ margin: 0 }} />\r\n              <DivPoints>\r\n                <span style={{ fontWeight: 600 }}>{remainingPoints}</span>{\" \"}\r\n                points restantes à dépenser\r\n              </DivPoints>\r\n            </Col>\r\n            <Button\r\n              style={{ position: \"absolute\", left: \"175px\" }}\r\n              icon={<CopyOutlined />}\r\n              disabled={selectedSkills.length === 0}\r\n              onClick={handleCopied}\r\n            />\r\n            <Col>\r\n              <div style={{ overflow: \"auto\", width: \"288px\", height: \"97px\" }}>\r\n                {selectedSkills.map(\r\n                  (item) =>\r\n                    item.isSquare && (\r\n                      <Tooltip title={item.text} placement=\"bottom\">\r\n                        <StyledImage\r\n                          color={skillColor}\r\n                          isSquare={item.isSquare}\r\n                          src={require(`../../asserts/images/paladin/${item.image}.jpg`)}\r\n                        />\r\n                      </Tooltip>\r\n                    )\r\n                )}\r\n              </div>\r\n              <Divider style={{ margin: 0 }} />\r\n              <div style={{ overflow: \"auto\", width: \"288px\", height: \"97px\" }}>\r\n                {selectedSkills.map(\r\n                  (item) =>\r\n                    !item.isSquare && (\r\n                      <Tooltip title={item.text} placement=\"bottom\">\r\n                        <StyledImage\r\n                          color={skillColor}\r\n                          isSquare={item.isSquare}\r\n                          src={require(`../../asserts/images/paladin/${item.image}.jpg`)}\r\n                        />\r\n                      </Tooltip>\r\n                    )\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </BlocStyled>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nDashBoard.propTypes = {\r\n  remainingPoints: PropTypes.number,\r\n  selectedSkills: PropTypes.array,\r\n  level: PropTypes.number,\r\n  simulationInProgress: PropTypes.bool,\r\n  skillColor: PropTypes.string,\r\n};\r\n\r\nexport default DashBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}