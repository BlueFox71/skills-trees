{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\App Web\\\\skill-tree\\\\src\\\\skillTree\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row } from \"antd\";\nimport Skill, { POSITION_SKILL } from \"./skill\";\nimport paladin from \"../asserts/data/paladin.json\";\nimport { CHARACTER_CLASS } from \"../utils/enum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillTree = ({\n  character\n}) => {\n  _s();\n  const [data, setData] = useState(paladin);\n  const ref = useRef(null);\n  useEffect(() => {\n    console.log(\"use effect\", document.getElementById(\"parent\"));\n  }, []);\n  const getDataSkillTree = () => {\n    switch (character) {\n      case CHARACTER_CLASS.PALADIN:\n        {\n          setData(paladin);\n          break;\n        }\n      default:\n      case POSITION_SKILL.MIDDLE:\n        {\n          setData(paladin);\n          break;\n        }\n    }\n  };\n  const renderSkillTree = () => {\n    getDataSkillTree();\n    if (data) {\n      console.log(\"ref\", ref);\n      let divParent = document.getElementsByName(\"parent\");\n      //console.log(document, divParent);\n      const {\n        items\n      } = data;\n      // console.log(data, items.length);\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        console.log(item);\n        divParent.appendChild( /*#__PURE__*/_jsxDEV(Skill, {\n          id: \"skill-1-1\",\n          position: item.position,\n          top: 0,\n          left: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        backgroundColor: \"yellow\",\n        width: \"500px\",\n        height: \"500px\",\n        paddingLeft: \"150px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        style: {\n          position: \"relative\"\n        },\n        id: \"parent\",\n        children: renderSkillTree()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillTree, \"gN9w8Cjd0OmGznEgLrHSQgTTzuc=\");\n_c = SkillTree;\nSkillTree.propTypes = {\n  character: PropTypes.string\n};\nexport default SkillTree;\nvar _c;\n$RefreshReg$(_c, \"SkillTree\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PropTypes","Col","Row","Skill","POSITION_SKILL","paladin","CHARACTER_CLASS","jsxDEV","_jsxDEV","SkillTree","character","_s","data","setData","ref","console","log","document","getElementById","getDataSkillTree","PALADIN","MIDDLE","renderSkillTree","divParent","getElementsByName","items","i","length","item","appendChild","id","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","children","style","backgroundColor","width","height","paddingLeft","_c","propTypes","string","$RefreshReg$"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/index.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nimport Skill, { POSITION_SKILL } from \"./skill\";\r\nimport paladin from \"../asserts/data/paladin.json\";\r\nimport { CHARACTER_CLASS } from \"../utils/enum\";\r\n\r\nconst SkillTree = ({ character }) => {\r\n  const [data, setData] = useState(paladin);\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"use effect\", document.getElementById(\"parent\"))\r\n  }, [])\r\n  \r\n  const getDataSkillTree = () => {\r\n    switch (character) {\r\n      case CHARACTER_CLASS.PALADIN: {\r\n        setData(paladin);\r\n        break;\r\n      }\r\n      default:\r\n      case POSITION_SKILL.MIDDLE: {\r\n        setData(paladin);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderSkillTree = () => {\r\n    getDataSkillTree();\r\n    if (data) {\r\n      console.log(\"ref\", ref);\r\n      let divParent = document.getElementsByName(\"parent\");\r\n      //console.log(document, divParent);\r\n      const { items } = data;\r\n      // console.log(data, items.length);\r\n      for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        console.log(item);\r\n        divParent.appendChild(\r\n          <Skill id=\"skill-1-1\" position={item.position} top={0} left={0} />\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col\r\n        style={{\r\n          backgroundColor: \"yellow\",\r\n          width: \"500px\",\r\n          height: \"500px\",\r\n          paddingLeft: \"150px\",\r\n        }}\r\n      >\r\n        <div ref={ref} style={{ position: \"relative\" }} id=\"parent\">\r\n          {/*<Skill\r\n            id=\"skill-1-1\"\r\n            position={POSITION_SKILL.MIDDLE}\r\n            top={0}\r\n            left={0}\r\n          />\r\n          <Skill\r\n            id=\"skill-1-2\"\r\n            position={POSITION_SKILL.RIGHT_BOTTOM}\r\n            parentId={\"skill-1-1\"}\r\n            top={120}\r\n            left={0}\r\n          />\r\n          <Skill\r\n            id={\"skill-1-3\"}\r\n            position={POSITION_SKILL.MIDDLE}\r\n            parentId={\"skill-1-2\"}\r\n            top={200}\r\n            left={-60}\r\n      />*/}\r\n          {renderSkillTree()}\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nSkillTree.propTypes = {\r\n  character: PropTypes.string,\r\n};\r\n\r\nexport default SkillTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}