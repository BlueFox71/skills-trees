{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\App Web\\\\skill-tree\\\\src\\\\skillTree\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row } from \"antd\";\nimport styled from \"styled-components\";\nimport Skill from \"./skill\";\nimport { addLeft, addTop } from \"../utils/position\";\nimport Line from \"./line\";\nimport { STATUS_SKILL } from \"../utils/enum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyled = styled.div`\n  position: absolute;\n`;\n_c = RootStyled;\nconst SkillTree = ({\n  character,\n  visual,\n  points,\n  data\n}) => {\n  _s();\n  const [rootLineColor, setRootLineColor] = useState(\"gray\");\n  const [currentSkills, setCurrentSkills] = useState([]);\n  const [remainingPoints, setRemainingPoints] = useState(points);\n  const handleSelectSkill = useCallback(async item => {\n    if (!visual) {\n      const currentSkills = [...originalArray];\n      console.log(item);\n      console.log(currentSkills);\n      const childrens = currentSkills.filter(x => {\n        var _x$props$item$parentI;\n        return (_x$props$item$parentI = x.props.item.parentId) === null || _x$props$item$parentI === void 0 ? void 0 : _x$props$item$parentI.includes(item.id);\n      });\n      if (item.status === STATUS_SKILL.CAN_BE_SELECTED) {\n        //talent sélectionné\n        setRemainingPoints(remainingPoints - 1);\n        item.status = STATUS_SKILL.IS_SELECTED;\n        childrens.forEach(child => {\n          child.props.item.status = STATUS_SKILL.CAN_BE_SELECTED;\n          if (child.props.item.parentId[0] === item.id) {\n            child.props.item.hasLineColor = true;\n          } else {\n            child.props.item.parentsLines[0].hasLineColor = true;\n          }\n        });\n        if (item.id === \"r-4\") {\n          setRootLineColor(data.lineColor);\n        }\n      } else if (\n      //talent désélectionné\n      item.status === STATUS_SKILL.IS_SELECTED && item.id !== \"r-1\") {\n        let hasSelectedChild = false;\n        childrens.forEach(child => {\n          if (child.props.item.status === STATUS_SKILL.IS_SELECTED) {\n            hasSelectedChild = true;\n          }\n        });\n        if (!hasSelectedChild) {\n          setRemainingPoints(remainingPoints + 1);\n          item.status = STATUS_SKILL.CAN_BE_SELECTED;\n          if (item.id === \"r-4\") {\n            setRootLineColor(\"gray\");\n          }\n          childrens.forEach(child => {\n            child.props.item.status = STATUS_SKILL.CANNOT_BE_SELECTED;\n          });\n        }\n      }\n    }\n  }, [data, remainingPoints, visual]);\n  const getSkill = useCallback((item, top, left, lineColor, skillColor, first) => {\n    return /*#__PURE__*/_jsxDEV(Skill, {\n      item: item,\n      firstSkill: first,\n      top: top,\n      left: left,\n      lineColor: lineColor,\n      skillColor: skillColor,\n      onSelect: handleSelectSkill,\n      visual: visual,\n      skills: currentSkills\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }, [visual, handleSelectSkill, currentSkills]);\n  const generateNodes = useCallback((item, top, left, parentPosition, skills, lineColor, skillColor) => {\n    if (item.nodes && item.nodes.length > 0) {\n      let topNode = top;\n      let leftNode = left;\n      let parentPositionNode = parentPosition;\n      item.nodes.forEach(item => {\n        topNode += addTop(item.position, parentPositionNode, item.id);\n        leftNode += addLeft(item.position, parentPositionNode, item.id);\n        skills.push(getSkill(item, topNode, leftNode, lineColor, skillColor, false));\n        parentPositionNode = item.position;\n        skills = generateNodes(item, topNode, leftNode + 30, parentPositionNode, skills, lineColor, skillColor);\n      });\n    }\n    return skills;\n  }, [getSkill]);\n  const generateMainBranch = useCallback((items, lineColor, skillColor, topInit, leftInit) => {\n    let top = topInit;\n    let left = leftInit;\n    let parentPosition = null;\n    let first = true;\n    let skills = [];\n    items.forEach(item => {\n      top += addTop(item.position, parentPosition, item.id);\n      left += addLeft(item.position, parentPosition, item.id);\n      parentPosition = item.position;\n      skills.push(getSkill(item, top, left, lineColor, skillColor, first));\n      skills = generateNodes(item, top + 30, left + 15, parentPosition, skills, lineColor, skillColor);\n    });\n    return skills;\n  }, [generateNodes, getSkill]);\n  const renderSkillTree = useCallback(async () => {\n    const {\n      itemsRoot,\n      itemsFirst,\n      itemsSecond,\n      itemsThird,\n      itemsFourth,\n      lineColor,\n      skillColor\n    } = data;\n    return [...generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450), ...generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0), ...generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450), ...generateMainBranch(itemsThird, lineColor, skillColor, 0, 480), ...generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900)];\n  }, [data, generateMainBranch]);\n  useEffect(() => {\n    setRootLineColor(visual ? data === null || data === void 0 ? void 0 : data.lineColor : rootLineColor);\n  }, [visual, rootLineColor, data]);\n  useEffect(() => {\n    const updateSkills = async () => {\n      const skills = await renderSkillTree();\n      if (skills) {\n        setCurrentSkills(skills);\n      }\n    };\n    if (currentSkills.length === 0) {\n      updateSkills();\n    }\n  }, [renderSkillTree, currentSkills]);\n  return currentSkills && currentSkills.length && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"0 auto\",\n      width: \"1000px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          paddingTop: \"350px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(RootStyled, {\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            top: -414,\n            left: 451,\n            color: rootLineColor,\n            rotation: 90,\n            translate: \"0,0\",\n            length: 903\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          id: \"container\",\n          children: currentSkills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 7\n  }, this);\n};\n_s(SkillTree, \"8R18ZnDC+Uem3fPAq7F23A8fs0U=\");\n_c2 = SkillTree;\nSkillTree.propTypes = {\n  character: PropTypes.string,\n  visual: PropTypes.bool,\n  points: PropTypes.number,\n  data: PropTypes.shape()\n};\nexport default SkillTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"RootStyled\");\n$RefreshReg$(_c2, \"SkillTree\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","PropTypes","Col","Row","styled","Skill","addLeft","addTop","Line","STATUS_SKILL","jsxDEV","_jsxDEV","RootStyled","div","_c","SkillTree","character","visual","points","data","_s","rootLineColor","setRootLineColor","currentSkills","setCurrentSkills","remainingPoints","setRemainingPoints","handleSelectSkill","item","originalArray","console","log","childrens","filter","x","_x$props$item$parentI","props","parentId","includes","id","status","CAN_BE_SELECTED","IS_SELECTED","forEach","child","hasLineColor","parentsLines","lineColor","hasSelectedChild","CANNOT_BE_SELECTED","getSkill","top","left","skillColor","first","firstSkill","onSelect","skills","fileName","_jsxFileName","lineNumber","columnNumber","generateNodes","parentPosition","nodes","length","topNode","leftNode","parentPositionNode","position","push","generateMainBranch","items","topInit","leftInit","renderSkillTree","itemsRoot","itemsFirst","itemsSecond","itemsThird","itemsFourth","updateSkills","style","margin","width","children","paddingTop","color","rotation","translate","_c2","propTypes","string","bool","number","shape","$RefreshReg$"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/index.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Skill from \"./skill\";\r\nimport { addLeft, addTop } from \"../utils/position\";\r\nimport Line from \"./line\";\r\nimport { STATUS_SKILL } from \"../utils/enum\";\r\n\r\nconst RootStyled = styled.div`\r\n  position: absolute;\r\n`;\r\n\r\nconst SkillTree = ({ character, visual, points, data }) => {\r\n  const [rootLineColor, setRootLineColor] = useState(\"gray\");\r\n  const [currentSkills, setCurrentSkills] = useState([]);\r\n  const [remainingPoints, setRemainingPoints] = useState(points);\r\n\r\n  const handleSelectSkill = useCallback(\r\n    async (item) => {\r\n      if (!visual) {\r\n        const currentSkills = [...originalArray];\r\n\r\n        console.log(item);\r\n        console.log(currentSkills)\r\n        const childrens = currentSkills.filter((x) =>\r\n          x.props.item.parentId?.includes(item.id)\r\n        );\r\n        if (item.status === STATUS_SKILL.CAN_BE_SELECTED) {\r\n          //talent sélectionné\r\n          setRemainingPoints(remainingPoints - 1);\r\n          item.status = STATUS_SKILL.IS_SELECTED;\r\n          childrens.forEach((child) => {\r\n            child.props.item.status = STATUS_SKILL.CAN_BE_SELECTED;\r\n            if (child.props.item.parentId[0] === item.id) {\r\n              child.props.item.hasLineColor = true;\r\n            } else {\r\n              child.props.item.parentsLines[0].hasLineColor = true;\r\n            }\r\n          });\r\n          if (item.id === \"r-4\") {\r\n            setRootLineColor(data.lineColor);\r\n          }\r\n        } else if (\r\n          //talent désélectionné\r\n          item.status === STATUS_SKILL.IS_SELECTED &&\r\n          item.id !== \"r-1\"\r\n        ) {\r\n          let hasSelectedChild = false;\r\n          childrens.forEach((child) => {\r\n            if (child.props.item.status === STATUS_SKILL.IS_SELECTED) {\r\n              hasSelectedChild = true;\r\n            }\r\n          });\r\n          if (!hasSelectedChild) {\r\n            setRemainingPoints(remainingPoints + 1);\r\n            item.status = STATUS_SKILL.CAN_BE_SELECTED;\r\n            if (item.id === \"r-4\") {\r\n              setRootLineColor(\"gray\");\r\n            }\r\n            childrens.forEach((child) => {\r\n              child.props.item.status = STATUS_SKILL.CANNOT_BE_SELECTED;\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [data, remainingPoints, visual]\r\n  );\r\n  const getSkill = useCallback(\r\n    (item, top, left, lineColor, skillColor, first) => {\r\n      return (\r\n        <Skill\r\n          key={item.id}\r\n          item={item}\r\n          firstSkill={first}\r\n          top={top}\r\n          left={left}\r\n          lineColor={lineColor}\r\n          skillColor={skillColor}\r\n          onSelect={handleSelectSkill}\r\n          visual={visual}\r\n          skills={currentSkills}\r\n        />\r\n      );\r\n    },\r\n    [visual, handleSelectSkill, currentSkills]\r\n  );\r\n\r\n  const generateNodes = useCallback(\r\n    (item, top, left, parentPosition, skills, lineColor, skillColor) => {\r\n      if (item.nodes && item.nodes.length > 0) {\r\n        let topNode = top;\r\n        let leftNode = left;\r\n        let parentPositionNode = parentPosition;\r\n        item.nodes.forEach((item) => {\r\n          topNode += addTop(item.position, parentPositionNode, item.id);\r\n          leftNode += addLeft(item.position, parentPositionNode, item.id);\r\n          skills.push(\r\n            getSkill(item, topNode, leftNode, lineColor, skillColor, false)\r\n          );\r\n          parentPositionNode = item.position;\r\n          skills = generateNodes(\r\n            item,\r\n            topNode,\r\n            leftNode + 30,\r\n            parentPositionNode,\r\n            skills,\r\n            lineColor,\r\n            skillColor\r\n          );\r\n        });\r\n      }\r\n      return skills;\r\n    },\r\n    [getSkill]\r\n  );\r\n\r\n  const generateMainBranch = useCallback(\r\n    (items, lineColor, skillColor, topInit, leftInit) => {\r\n      let top = topInit;\r\n      let left = leftInit;\r\n      let parentPosition = null;\r\n      let first = true;\r\n      let skills = [];\r\n\r\n      items.forEach((item) => {\r\n        top += addTop(item.position, parentPosition, item.id);\r\n        left += addLeft(item.position, parentPosition, item.id);\r\n        parentPosition = item.position;\r\n        skills.push(getSkill(item, top, left, lineColor, skillColor, first));\r\n        skills = generateNodes(\r\n          item,\r\n          top + 30,\r\n          left + 15,\r\n          parentPosition,\r\n          skills,\r\n          lineColor,\r\n          skillColor\r\n        );\r\n      });\r\n      return skills;\r\n    },\r\n    [generateNodes, getSkill]\r\n  );\r\n\r\n  const renderSkillTree = useCallback(\r\n    async () => {\r\n      const {\r\n        itemsRoot,\r\n        itemsFirst,\r\n        itemsSecond,\r\n        itemsThird,\r\n        itemsFourth,\r\n        lineColor,\r\n        skillColor,\r\n      } = data;\r\n      return [\r\n        ...generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450),\r\n        ...generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0),\r\n        ...generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450),\r\n        ...generateMainBranch(itemsThird, lineColor, skillColor, 0, 480),\r\n        ...generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900),\r\n      ];\r\n    },\r\n    [data, generateMainBranch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setRootLineColor(visual ? data?.lineColor : rootLineColor);\r\n  }, [visual, rootLineColor, data]);\r\n\r\n  useEffect(() => {\r\n    const updateSkills = async () => {\r\n      const skills = await renderSkillTree();\r\n      if (skills) {\r\n        setCurrentSkills(skills);\r\n      }\r\n    };\r\n\r\n    if (currentSkills.length === 0) {\r\n      updateSkills();\r\n    }\r\n  }, [renderSkillTree, currentSkills]);\r\n\r\n  return (\r\n    currentSkills &&\r\n    currentSkills.length &&\r\n     (\r\n      <div style={{ margin: \"0 auto\", width: \"1000px\" }}>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              paddingTop: \"350px\",\r\n            }}\r\n          >\r\n            <RootStyled>\r\n              <Line\r\n                top={-414}\r\n                left={451}\r\n                color={rootLineColor}\r\n                rotation={90}\r\n                translate={\"0,0\"}\r\n                length={903}\r\n              />\r\n            </RootStyled>\r\n            <div style={{ position: \"relative\" }} id=\"container\">\r\n              {currentSkills}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nSkillTree.propTypes = {\r\n  character: PropTypes.string,\r\n  visual: PropTypes.bool,\r\n  points: PropTypes.number,\r\n  data: PropTypes.shape(),\r\n};\r\n\r\nexport default SkillTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}