{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/Documents/App Web/skill-tree/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useCallback,useEffect,useState}from\"react\";import{Col,Row}from\"antd\";import styled from\"styled-components\";import Skill from\"./skill\";import{addLeft,addTop}from\"../utils/position\";import Line from\"./line\";import{STATUS_SKILL}from\"../utils/enum\";import DashBoard from\"./dashboard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const RootStyled=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: \",\";\\n  left: \",\";\\n\"])),props=>props.top,props=>props.left);const SkillTree=_ref=>{let{character,visual,points,simulationInProgress,data}=_ref;const[rootLineColor,setRootLineColor]=useState(\"gray\");const[currentSkills,setCurrentSkills]=useState([]);const[remainingPoints,setRemainingPoints]=useState(points);const[selectedSkills,setSelectedSkills]=useState([]);const[level,setLevel]=useState(0);const handleSelectSkill=useCallback(item=>{console.log(item);if(!visual&&simulationInProgress&&remainingPoints>0){const childrens=currentSkills.filter(x=>{var _x$props$item$parentI;return(_x$props$item$parentI=x.props.item.parentId)===null||_x$props$item$parentI===void 0?void 0:_x$props$item$parentI.includes(item.id);});if(item.status===STATUS_SKILL.CAN_BE_SELECTED){//talent sélectionné\nsetRemainingPoints(remainingPoints-1);setLevel(level+1);setSelectedSkills([...selectedSkills,item]);item.status=STATUS_SKILL.IS_SELECTED;childrens.forEach(child=>{var _child$props$item$par;if(child.props.item.status!==STATUS_SKILL.IS_SELECTED){child.props.item.status=STATUS_SKILL.CAN_BE_SELECTED;}if(child.props.item.parentId[0]===item.id){child.props.item.hasLineColor=true;}else{child.props.item.parentsLines[0].hasLineColor=true;}if(child.props.item.image===null&&(_child$props$item$par=child.props.item.parentsLines)!==null&&_child$props$item$par!==void 0&&_child$props$item$par.length){child.props.item.parentsLines[0].hasLineColor=true;}});if(item.id===\"r-4\"){setRootLineColor(data.lineColor);}}else if(//talent désélectionné\nitem.status===STATUS_SKILL.IS_SELECTED&&item.id!==\"r-1\"){let hasSelectedChild=false;childrens.forEach(child=>{if(child.props.item.status===STATUS_SKILL.IS_SELECTED){hasSelectedChild=true;}});if(!hasSelectedChild){setRemainingPoints(remainingPoints+1);setLevel(level-1);const index=selectedSkills.findIndex(x=>x.id===item.id);selectedSkills.splice(index,1);item.status=STATUS_SKILL.CAN_BE_SELECTED;if(item.id===\"r-4\"){setRootLineColor(\"gray\");}childrens.forEach(child=>{var _child$props$item$par2;child.props.item.status=STATUS_SKILL.CANNOT_BE_SELECTED;child.props.item.hasLineColor=false;if((_child$props$item$par2=child.props.item.parentsLines)!==null&&_child$props$item$par2!==void 0&&_child$props$item$par2.length){child.props.item.parentsLines[0].hasLineColor=false;}});}}}},[currentSkills,data,remainingPoints,visual,level,selectedSkills,simulationInProgress]);const getSkill=useCallback((item,top,left,lineColor,skillColor,first)=>{return/*#__PURE__*/_jsx(Skill,{item:item,firstSkill:first,top:top,left:left,lineColor:lineColor,skillColor:skillColor,onSelect:handleSelectSkill,visual:visual},item.id);},[visual,handleSelectSkill]);const generateNodes=useCallback((item,top,left,parentPosition,skills,lineColor,skillColor)=>{if(item.nodes&&item.nodes.length>0){let topNode=top;let leftNode=left;let parentPositionNode=parentPosition;item.nodes.forEach(item=>{topNode+=addTop(item.position,parentPositionNode,item.id);leftNode+=addLeft(item.position,parentPositionNode,item.id);skills.push(getSkill(item,topNode,leftNode,lineColor,skillColor,false));parentPositionNode=item.position;generateNodes(item,topNode,leftNode+30,parentPositionNode,skills,lineColor,skillColor);});}return skills;},[getSkill]);const generateMainBranch=useCallback((items,lineColor,skillColor,topInit,leftInit)=>{let top=topInit;let left=leftInit;let parentPosition=null;let first=true;let skills=[];items.forEach(item=>{top+=addTop(item.position,parentPosition,item.id);left+=addLeft(item.position,parentPosition,item.id);parentPosition=item.position;skills.push(getSkill(item,top,left,lineColor,skillColor,first));skills=generateNodes(item,top+30,left+15,parentPosition,skills,lineColor,skillColor);});return skills;},[generateNodes,getSkill]);const renderSkillTree=useCallback(()=>{if(data&&character){const{itemsRoot,itemsFirst,itemsSecond,itemsThird,itemsFourth,lineColor,skillColor}=data;let skills=generateMainBranch(itemsFirst,lineColor,skillColor,0);skills=[...generateMainBranch(itemsRoot,lineColor,skillColor,-385,450),...generateMainBranch(itemsFirst,lineColor,skillColor,0,0),...generateMainBranch(itemsSecond,lineColor,skillColor,0,450),...generateMainBranch(itemsThird,lineColor,skillColor,0,480),...generateMainBranch(itemsFourth,lineColor,skillColor,0,900)];setCurrentSkills(skills);}},[character,data,generateMainBranch]);useEffect(()=>{if(simulationInProgress){}else{setRemainingPoints(points);setSelectedSkills([]);setLevel(0);currentSkills.forEach(x=>{var _item$parentsLines;const{item}=x.props;item.status=item.id===\"r-1\"?STATUS_SKILL.CAN_BE_SELECTED:STATUS_SKILL.CANNOT_BE_SELECTED;item.hasLineColor=false;(_item$parentsLines=item.parentsLines)===null||_item$parentsLines===void 0?void 0:_item$parentsLines.forEach(line=>line.hasLineColor=false);});setRootLineColor(\"gray\");}renderSkillTree();},[simulationInProgress,points,data,currentSkills,renderSkillTree,setRootLineColor]);useEffect(()=>{setRemainingPoints(points);},[points]);return currentSkills&&currentSkills.length&&/*#__PURE__*/_jsx(\"div\",{style:{margin:\"0 auto\",width:\"1000px\"},children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{style:{paddingTop:\"350px\"},children:[/*#__PURE__*/_jsx(RootStyled,{children:/*#__PURE__*/_jsx(Line,{top:-414,left:451,color:visual?data.lineColor:rootLineColor,rotation:90,translate:\"0,0\",length:903})}),/*#__PURE__*/_jsx(DashBoard,{remainingPoints:remainingPoints,selectedSkills:selectedSkills,level:level,simulationInProgress:simulationInProgress,skillColor:data.skillColor}),/*#__PURE__*/_jsx(\"div\",{style:{position:\"relative\"},id:\"container\",children:currentSkills})]})})});};export default SkillTree;","map":{"version":3,"names":["React","useCallback","useEffect","useState","Col","Row","styled","Skill","addLeft","addTop","Line","STATUS_SKILL","DashBoard","jsx","_jsx","jsxs","_jsxs","RootStyled","div","_templateObject","_taggedTemplateLiteral","props","top","left","SkillTree","_ref","character","visual","points","simulationInProgress","data","rootLineColor","setRootLineColor","currentSkills","setCurrentSkills","remainingPoints","setRemainingPoints","selectedSkills","setSelectedSkills","level","setLevel","handleSelectSkill","item","console","log","childrens","filter","x","_x$props$item$parentI","parentId","includes","id","status","CAN_BE_SELECTED","IS_SELECTED","forEach","child","_child$props$item$par","hasLineColor","parentsLines","image","length","lineColor","hasSelectedChild","index","findIndex","splice","_child$props$item$par2","CANNOT_BE_SELECTED","getSkill","skillColor","first","firstSkill","onSelect","generateNodes","parentPosition","skills","nodes","topNode","leftNode","parentPositionNode","position","push","generateMainBranch","items","topInit","leftInit","renderSkillTree","itemsRoot","itemsFirst","itemsSecond","itemsThird","itemsFourth","_item$parentsLines","line","style","margin","width","children","paddingTop","color","rotation","translate"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/index.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Skill from \"./skill\";\r\nimport { addLeft, addTop } from \"../utils/position\";\r\nimport Line from \"./line\";\r\nimport { STATUS_SKILL } from \"../utils/enum\";\r\nimport DashBoard from \"./dashboard\";\r\n\r\nconst RootStyled = styled.div`\r\n  position: absolute;\r\n  top: ${(props) => props.top};\r\n  left: ${(props) => props.left};\r\n`;\r\n\r\nconst SkillTree = ({\r\n  character,\r\n  visual,\r\n  points,\r\n  simulationInProgress,\r\n  data,\r\n}) => {\r\n  const [rootLineColor, setRootLineColor] = useState(\"gray\");\r\n  const [currentSkills, setCurrentSkills] = useState([]);\r\n  const [remainingPoints, setRemainingPoints] = useState(points);\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const handleSelectSkill = useCallback(\r\n    (item) => {\r\n      console.log(item);\r\n      if (!visual && simulationInProgress && remainingPoints > 0) {\r\n        const childrens = currentSkills.filter((x) =>\r\n          x.props.item.parentId?.includes(item.id)\r\n        );\r\n        if (item.status === STATUS_SKILL.CAN_BE_SELECTED) {\r\n          //talent sélectionné\r\n          setRemainingPoints(remainingPoints - 1);\r\n          setLevel(level + 1);\r\n          setSelectedSkills([...selectedSkills, item]);\r\n          item.status = STATUS_SKILL.IS_SELECTED;\r\n          childrens.forEach((child) => {\r\n            if (child.props.item.status !== STATUS_SKILL.IS_SELECTED) {\r\n              child.props.item.status = STATUS_SKILL.CAN_BE_SELECTED;\r\n            }\r\n            if (child.props.item.parentId[0] === item.id) {\r\n              child.props.item.hasLineColor = true;\r\n            } else {\r\n              child.props.item.parentsLines[0].hasLineColor = true;\r\n            }\r\n            if (\r\n              child.props.item.image === null &&\r\n              child.props.item.parentsLines?.length\r\n            ) {\r\n              child.props.item.parentsLines[0].hasLineColor = true;\r\n            }\r\n          });\r\n          if (item.id === \"r-4\") {\r\n            setRootLineColor(data.lineColor);\r\n          }\r\n        } else if (\r\n          //talent désélectionné\r\n          item.status === STATUS_SKILL.IS_SELECTED &&\r\n          item.id !== \"r-1\"\r\n        ) {\r\n          let hasSelectedChild = false;\r\n          childrens.forEach((child) => {\r\n            if (child.props.item.status === STATUS_SKILL.IS_SELECTED) {\r\n              hasSelectedChild = true;\r\n            }\r\n          });\r\n          if (!hasSelectedChild) {\r\n            setRemainingPoints(remainingPoints + 1);\r\n            setLevel(level - 1);\r\n\r\n            const index = selectedSkills.findIndex((x) => x.id === item.id);\r\n            selectedSkills.splice(index, 1);\r\n\r\n            item.status = STATUS_SKILL.CAN_BE_SELECTED;\r\n            if (item.id === \"r-4\") {\r\n              setRootLineColor(\"gray\");\r\n            }\r\n            childrens.forEach((child) => {\r\n              child.props.item.status = STATUS_SKILL.CANNOT_BE_SELECTED;\r\n              child.props.item.hasLineColor = false;\r\n              if (child.props.item.parentsLines?.length) {\r\n                child.props.item.parentsLines[0].hasLineColor = false;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      currentSkills,\r\n      data,\r\n      remainingPoints,\r\n      visual,\r\n      level,\r\n      selectedSkills,\r\n      simulationInProgress,\r\n    ]\r\n  );\r\n\r\n  const getSkill = useCallback(\r\n    (item, top, left, lineColor, skillColor, first) => {\r\n      return (\r\n        <Skill\r\n          key={item.id}\r\n          item={item}\r\n          firstSkill={first}\r\n          top={top}\r\n          left={left}\r\n          lineColor={lineColor}\r\n          skillColor={skillColor}\r\n          onSelect={handleSelectSkill}\r\n          visual={visual}\r\n        />\r\n      );\r\n    },\r\n    [visual, handleSelectSkill]\r\n  );\r\n\r\n  const generateNodes = useCallback(\r\n    (item, top, left, parentPosition, skills, lineColor, skillColor) => {\r\n      if (item.nodes && item.nodes.length > 0) {\r\n        let topNode = top;\r\n        let leftNode = left;\r\n        let parentPositionNode = parentPosition;\r\n        item.nodes.forEach((item) => {\r\n          topNode += addTop(item.position, parentPositionNode, item.id);\r\n          leftNode += addLeft(item.position, parentPositionNode, item.id);\r\n          skills.push(\r\n            getSkill(item, topNode, leftNode, lineColor, skillColor, false)\r\n          );\r\n          parentPositionNode = item.position;\r\n          generateNodes(\r\n            item,\r\n            topNode,\r\n            leftNode + 30,\r\n            parentPositionNode,\r\n            skills,\r\n            lineColor,\r\n            skillColor\r\n          );\r\n        });\r\n      }\r\n      return skills;\r\n    },\r\n    [getSkill]\r\n  );\r\n\r\n  const generateMainBranch = useCallback(\r\n    (items, lineColor, skillColor, topInit, leftInit) => {\r\n      let top = topInit;\r\n      let left = leftInit;\r\n      let parentPosition = null;\r\n      let first = true;\r\n      let skills = [];\r\n\r\n      items.forEach((item) => {\r\n        top += addTop(item.position, parentPosition, item.id);\r\n        left += addLeft(item.position, parentPosition, item.id);\r\n        parentPosition = item.position;\r\n\r\n        skills.push(getSkill(item, top, left, lineColor, skillColor, first));\r\n        skills = generateNodes(\r\n          item,\r\n          top + 30,\r\n          left + 15,\r\n          parentPosition,\r\n          skills,\r\n          lineColor,\r\n          skillColor\r\n        );\r\n      });\r\n      return skills;\r\n    },\r\n    [generateNodes, getSkill]\r\n  );\r\n\r\n  const renderSkillTree = useCallback(() => {\r\n    if (data && character) {\r\n      const {\r\n        itemsRoot,\r\n        itemsFirst,\r\n        itemsSecond,\r\n        itemsThird,\r\n        itemsFourth,\r\n        lineColor,\r\n        skillColor,\r\n      } = data;\r\n      let skills = generateMainBranch(itemsFirst, lineColor, skillColor, 0);\r\n      skills = [\r\n        ...generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450),\r\n        ...generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0),\r\n        ...generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450),\r\n        ...generateMainBranch(itemsThird, lineColor, skillColor, 0, 480),\r\n        ...generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900),\r\n      ];\r\n      setCurrentSkills(skills);\r\n    }\r\n  }, [character, data, generateMainBranch]);\r\n\r\n  useEffect(() => {\r\n    if (simulationInProgress) {\r\n    } else {\r\n      setRemainingPoints(points);\r\n      setSelectedSkills([]);\r\n      setLevel(0);\r\n      currentSkills.forEach((x) => {\r\n        const { item } = x.props;\r\n        item.status =\r\n          item.id === \"r-1\"\r\n            ? STATUS_SKILL.CAN_BE_SELECTED\r\n            : STATUS_SKILL.CANNOT_BE_SELECTED;\r\n        item.hasLineColor = false;\r\n        item.parentsLines?.forEach((line) => (line.hasLineColor = false));\r\n      });\r\n      setRootLineColor(\"gray\");\r\n    }\r\n    renderSkillTree();\r\n  }, [\r\n    simulationInProgress,\r\n    points,\r\n    data,\r\n    currentSkills,\r\n    renderSkillTree,\r\n    setRootLineColor,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setRemainingPoints(points);\r\n  }, [points]);\r\n  return (\r\n    currentSkills &&\r\n    currentSkills.length && (\r\n      <div style={{ margin: \"0 auto\", width: \"1000px\" }}>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              paddingTop: \"350px\",\r\n            }}\r\n          >\r\n            <RootStyled>\r\n              <Line\r\n                top={-414}\r\n                left={451}\r\n                color={visual ? data.lineColor : rootLineColor}\r\n                rotation={90}\r\n                translate={\"0,0\"}\r\n                length={903}\r\n              />\r\n            </RootStyled>\r\n            <DashBoard\r\n              remainingPoints={remainingPoints}\r\n              selectedSkills={selectedSkills}\r\n              level={level}\r\n              simulationInProgress={simulationInProgress}\r\n              skillColor={data.skillColor}\r\n            />\r\n            <div style={{ position: \"relative\" }} id=\"container\">\r\n              {currentSkills}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nSkillTree.propTypes = {\r\n  character: PropTypes.string,\r\n  visual: PropTypes.bool,\r\n  points: PropTypes.number,\r\n  simulationInProgress: PropTypes.bool,\r\n  data: PropTypes.shape(),\r\n};\r\n\r\nexport default SkillTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}