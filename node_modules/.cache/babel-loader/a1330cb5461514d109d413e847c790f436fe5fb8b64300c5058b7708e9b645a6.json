{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\App Web\\\\skill-tree\\\\src\\\\skillTree\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row } from \"antd\";\nimport ReactDOM from 'react-dom';\nimport Skill, { POSITION_SKILL } from \"./skill\";\nimport paladin from \"../asserts/data/paladin.json\";\nimport { CHARACTER_CLASS } from \"../utils/enum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillTree = ({\n  character\n}) => {\n  _s();\n  const [data, setData] = useState(paladin);\n  const [container, setContainer] = useState(null);\n  const getDataSkillTree = () => {\n    switch (character) {\n      case CHARACTER_CLASS.PALADIN:\n        {\n          setData(paladin);\n          break;\n        }\n      default:\n      case POSITION_SKILL.MIDDLE:\n        {\n          setData(paladin);\n          break;\n        }\n    }\n  };\n  useEffect(() => {\n    setContainer(document.getElementById(\"container\"));\n  }, [container]);\n  useEffect(() => {\n    getDataSkillTree();\n    if (container) {\n      renderSkillTree();\n    }\n  });\n  const renderSkillTree = () => {\n    //console.log(document, divParent);\n    const {\n      items\n    } = data;\n    console.log(container);\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      console.log(item);\n      const composant = /*#__PURE__*/_jsxDEV(Skill, {\n        id: \"skill-1-1\",\n        position: item.position,\n        top: 0,\n        left: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this);\n      ReactDOM.render(composant, container);\n      const domNode = ReactDOM.findDOMNode(myComponent);\n      container.appendChild();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        backgroundColor: \"yellow\",\n        width: \"500px\",\n        height: \"500px\",\n        paddingLeft: \"150px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        id: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillTree, \"cTv8aQiQbF2Thv7k4wZp070dH+4=\");\n_c = SkillTree;\nSkillTree.propTypes = {\n  character: PropTypes.string\n};\nexport default SkillTree;\nvar _c;\n$RefreshReg$(_c, \"SkillTree\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","Col","Row","ReactDOM","Skill","POSITION_SKILL","paladin","CHARACTER_CLASS","jsxDEV","_jsxDEV","SkillTree","character","_s","data","setData","container","setContainer","getDataSkillTree","PALADIN","MIDDLE","document","getElementById","renderSkillTree","items","console","log","i","length","item","composant","id","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","render","domNode","findDOMNode","myComponent","appendChild","children","style","backgroundColor","width","height","paddingLeft","_c","propTypes","string","$RefreshReg$"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Skill, { POSITION_SKILL } from \"./skill\";\r\nimport paladin from \"../asserts/data/paladin.json\";\r\nimport { CHARACTER_CLASS } from \"../utils/enum\";\r\n\r\nconst SkillTree = ({ character }) => {\r\n  const [data, setData] = useState(paladin);\r\n  const [container, setContainer] = useState(null);\r\n\r\n  const getDataSkillTree = () => {\r\n    switch (character) {\r\n      case CHARACTER_CLASS.PALADIN: {\r\n        setData(paladin);\r\n        break;\r\n      }\r\n      default:\r\n      case POSITION_SKILL.MIDDLE: {\r\n        setData(paladin);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContainer(document.getElementById(\"container\"));\r\n  }, [container]);\r\n\r\n  useEffect(() => {\r\n    getDataSkillTree();\r\n    if (container) {\r\n      renderSkillTree();\r\n    }\r\n  });\r\n\r\n  const renderSkillTree = () => {\r\n    //console.log(document, divParent);\r\n    const { items } = data;\r\n    console.log(container);\r\n    for (let i = 0; i < items.length; i++) {\r\n      const item = items[i];\r\n      console.log(item);\r\n      const composant = <Skill id=\"skill-1-1\" position={item.position} top={0} left={0} />\r\n      ReactDOM.render(composant, container)\r\n      const domNode = ReactDOM.findDOMNode(myComponent);\r\n\r\n      container.appendChild(\r\n        \r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col\r\n        style={{\r\n          backgroundColor: \"yellow\",\r\n          width: \"500px\",\r\n          height: \"500px\",\r\n          paddingLeft: \"150px\",\r\n        }}\r\n      >\r\n        <div style={{ position: \"relative\" }} id=\"container\">\r\n          {/*<Skill\r\n            id=\"skill-1-1\"\r\n            position={POSITION_SKILL.MIDDLE}\r\n            top={0}\r\n            left={0}\r\n          />\r\n          <Skill\r\n            id=\"skill-1-2\"\r\n            position={POSITION_SKILL.RIGHT_BOTTOM}\r\n            parentId={\"skill-1-1\"}\r\n            top={120}\r\n            left={0}\r\n          />\r\n          <Skill\r\n            id={\"skill-1-3\"}\r\n            position={POSITION_SKILL.MIDDLE}\r\n            parentId={\"skill-1-2\"}\r\n            top={200}\r\n            left={-60}\r\n      />*/}\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nSkillTree.propTypes = {\r\n  character: PropTypes.string,\r\n};\r\n\r\nexport default SkillTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}