{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\App Web\\\\skill-tree\\\\src\\\\skillTree\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row } from \"antd\";\nimport Skill, { POSITION_SKILL } from \"./skill\";\nimport paladin from \"../asserts/data/paladin.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillTree = ({\n  character\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const getDataSkillTree = () => {\n    switch (character) {\n      case POSITION_SKILL.LEFT:\n        {\n          setData(paladin);\n          break;\n        }\n      default:\n      case POSITION_SKILL.MIDDLE:\n        {\n          setData(paladin);\n          break;\n        }\n    }\n  };\n  const renderSkillTree = () => {\n    getDataSkillTree();\n    let divParent = document.getElementById(\"parent\");\n    const {\n      items\n    } = data;\n    return items.foreach(item => {\n      divParent.appendChild( /*#__PURE__*/_jsxDEV(Skill, {\n        id: \"skill-1-1\",\n        position: item.position,\n        top: 0,\n        left: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this));\n    });\n  };\n  renderSkillTree();\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        backgroundColor: \"yellow\",\n        width: \"500px\",\n        height: \"500px\",\n        paddingLeft: \"150px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        id: \"parent\",\n        children: [/*#__PURE__*/_jsxDEV(Skill, {\n          id: \"skill-1-1\",\n          position: POSITION_SKILL.MIDDLE,\n          top: 0,\n          left: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Skill, {\n          id: \"skill-1-2\",\n          position: POSITION_SKILL.RIGHT_BOTTOM,\n          parentId: \"skill-1-1\",\n          top: 120,\n          left: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skill, {\n          id: \"skill-1-3\",\n          position: POSITION_SKILL.MIDDLE,\n          parentId: \"skill-1-2\",\n          top: 200,\n          left: -60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillTree, \"r4Mei8r/vISzc+89378cYwOGDkw=\");\n_c = SkillTree;\nSkillTree.propTypes = {\n  character: PropTypes.string\n};\nexport default SkillTree;\nvar _c;\n$RefreshReg$(_c, \"SkillTree\");","map":{"version":3,"names":["React","useState","PropTypes","Col","Row","Skill","POSITION_SKILL","paladin","jsxDEV","_jsxDEV","SkillTree","character","_s","data","setData","getDataSkillTree","LEFT","MIDDLE","renderSkillTree","divParent","document","getElementById","items","foreach","item","appendChild","id","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","children","style","backgroundColor","width","height","paddingLeft","RIGHT_BOTTOM","parentId","_c","propTypes","string","$RefreshReg$"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nimport Skill, { POSITION_SKILL } from \"./skill\";\r\nimport paladin from \"../asserts/data/paladin.json\";\r\n\r\nconst SkillTree = ({ character }) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  const getDataSkillTree = () => {\r\n    switch (character) {\r\n      case POSITION_SKILL.LEFT: {\r\n        setData(paladin);\r\n        break;\r\n      }\r\n      default:\r\n      case POSITION_SKILL.MIDDLE: {\r\n        setData(paladin);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderSkillTree = () => {\r\n    getDataSkillTree();\r\n    let divParent = document.getElementById(\"parent\");\r\n    const { items } = data;\r\n    return items.foreach((item) => {\r\n      divParent.appendChild(\r\n        <Skill id=\"skill-1-1\" position={item.position} top={0} left={0} />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderSkillTree();\r\n  return (\r\n    <Row>\r\n      <Col\r\n        style={{\r\n          backgroundColor: \"yellow\",\r\n          width: \"500px\",\r\n          height: \"500px\",\r\n          paddingLeft: \"150px\",\r\n        }}\r\n      >\r\n        <div style={{ position: \"relative\" }} id=\"parent\">\r\n         <Skill\r\n            id=\"skill-1-1\"\r\n            position={POSITION_SKILL.MIDDLE}\r\n            top={0}\r\n            left={0}\r\n          />\r\n          <Skill\r\n            id=\"skill-1-2\"\r\n            position={POSITION_SKILL.RIGHT_BOTTOM}\r\n            parentId={\"skill-1-1\"}\r\n            top={120}\r\n            left={0}\r\n          />\r\n          <Skill\r\n            id={\"skill-1-3\"}\r\n            position={POSITION_SKILL.MIDDLE}\r\n            parentId={\"skill-1-2\"}\r\n            top={200}\r\n            left={-60}\r\n          />\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nSkillTree.propTypes = {\r\n  character: PropTypes.string,\r\n};\r\n\r\nexport default SkillTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}