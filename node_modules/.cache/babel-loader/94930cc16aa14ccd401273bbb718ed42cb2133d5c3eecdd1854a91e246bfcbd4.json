{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\App Web\\\\skill-tree\\\\src\\\\skillTree\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row } from \"antd\";\nimport styled from \"styled-components\";\nimport Skill from \"./skill\";\nimport { addLeft, addTop } from \"../utils/position\";\nimport { getDataSkillTree } from \"../utils/data\";\nimport Line from \"./line\";\nimport { STATUS_SKILL } from \"../utils/enum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyled = styled.div`\n  position: absolute;\n  top: ${props => props.top};\n  left: ${props => props.left};\n`;\n_c = RootStyled;\nconst SkillTree = ({\n  character,\n  visual,\n  points\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [rootLineColor, setRootLineColor] = useState(\"gray\");\n  const [currentSkills, setCurrentSkills] = useState([]);\n  const [remainingPoints, setRemainingPoints] = useState(points);\n  useEffect(() => {\n    setData(getDataSkillTree(character));\n  }, [character, setData]);\n  const getSkill = useCallback((item, top, left, lineColor, skillColor, first) => {\n    return /*#__PURE__*/_jsxDEV(Skill, {\n      item: item,\n      firstSkill: first,\n      top: top,\n      left: left,\n      lineColor: lineColor,\n      skillColor: skillColor,\n      onSelect: handleSelectSkill,\n      visual: visual\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }, [visual, handleSelectSkill]);\n  const generateNodes = useCallback((item, top, left, parentPosition, skills, lineColor, skillColor) => {\n    if (item.nodes && item.nodes.length > 0) {\n      let topNode = top;\n      let leftNode = left;\n      let parentPositionNode = parentPosition;\n      item.nodes.forEach(item => {\n        topNode += addTop(item.position, parentPositionNode, item.id);\n        leftNode += addLeft(item.position, parentPositionNode, item.id);\n        skills.push(getSkill(item, topNode, leftNode, lineColor, skillColor, false));\n        parentPositionNode = item.position;\n        generateNodes(item, topNode, leftNode + 30, parentPositionNode, skills, lineColor, skillColor);\n      });\n    }\n    return skills;\n  }, [getSkill]);\n  const generateMainBranch = useCallback((items, lineColor, skillColor, topInit, leftInit) => {\n    let top = topInit;\n    let left = leftInit;\n    let parentPosition = null;\n    let first = true;\n    let skills = [];\n    items.forEach(item => {\n      top += addTop(item.position, parentPosition, item.id);\n      left += addLeft(item.position, parentPosition, item.id);\n      parentPosition = item.position;\n      skills.push(getSkill(item, top, left, lineColor, skillColor, first));\n      skills = generateNodes(item, top + 30, left + 15, parentPosition, skills, lineColor, skillColor);\n    });\n    return skills;\n  }, [generateNodes, getSkill]);\n  const renderSkillTree = useCallback(() => {\n    if (data && character) {\n      const {\n        itemsRoot,\n        itemsFirst,\n        itemsSecond,\n        itemsThird,\n        itemsFourth,\n        lineColor,\n        skillColor\n      } = data;\n      let skills = generateMainBranch(itemsFirst, lineColor, skillColor, 0);\n      skills = [...generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450), ...generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0), ...generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450), ...generateMainBranch(itemsThird, lineColor, skillColor, 0, 480), ...generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900)];\n      setCurrentSkills(skills);\n    }\n  }, [character, data, generateMainBranch]);\n  useEffect(() => {\n    renderSkillTree();\n  }, [renderSkillTree]);\n  return currentSkills && currentSkills.length && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"0 auto\",\n      width: \"1000px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          paddingTop: \"350px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(RootStyled, {\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            top: -414,\n            left: 451,\n            color: rootLineColor,\n            rotation: 90,\n            translate: \"0,0\",\n            length: 903\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          id: \"container\",\n          children: currentSkills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 7\n  }, this);\n};\n_s(SkillTree, \"/Agv4rhI3m1RkFw5sOR3r/dVhws=\");\n_c2 = SkillTree;\nSkillTree.propTypes = {\n  character: PropTypes.string,\n  visual: PropTypes.bool,\n  points: PropTypes.number\n};\nexport default SkillTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"RootStyled\");\n$RefreshReg$(_c2, \"SkillTree\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","PropTypes","Col","Row","styled","Skill","addLeft","addTop","getDataSkillTree","Line","STATUS_SKILL","jsxDEV","_jsxDEV","RootStyled","div","props","top","left","_c","SkillTree","character","visual","points","_s","data","setData","rootLineColor","setRootLineColor","currentSkills","setCurrentSkills","remainingPoints","setRemainingPoints","getSkill","item","lineColor","skillColor","first","firstSkill","onSelect","handleSelectSkill","id","fileName","_jsxFileName","lineNumber","columnNumber","generateNodes","parentPosition","skills","nodes","length","topNode","leftNode","parentPositionNode","forEach","position","push","generateMainBranch","items","topInit","leftInit","renderSkillTree","itemsRoot","itemsFirst","itemsSecond","itemsThird","itemsFourth","style","margin","width","children","paddingTop","color","rotation","translate","_c2","propTypes","string","bool","number","$RefreshReg$"],"sources":["D:/Documents/App Web/skill-tree/src/skillTree/index.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Skill from \"./skill\";\r\nimport { addLeft, addTop } from \"../utils/position\";\r\nimport { getDataSkillTree } from \"../utils/data\";\r\nimport Line from \"./line\";\r\nimport { STATUS_SKILL } from \"../utils/enum\";\r\n\r\nconst RootStyled = styled.div`\r\n  position: absolute;\r\n  top: ${(props) => props.top};\r\n  left: ${(props) => props.left};\r\n`;\r\n\r\nconst SkillTree = ({ character, visual, points }) => {\r\n  const [data, setData] = useState(null);\r\n  const [rootLineColor, setRootLineColor] = useState(\"gray\");\r\n  const [currentSkills, setCurrentSkills] = useState([]);\r\n  const [remainingPoints, setRemainingPoints] = useState(points);\r\n\r\n  useEffect(() => {\r\n    setData(getDataSkillTree(character));\r\n  }, [character, setData]);\r\n\r\n\r\n\r\n  const getSkill = useCallback ((item, top, left, lineColor, skillColor, first) => {\r\n    return (\r\n      <Skill\r\n        key={item.id}\r\n        item={item}\r\n        firstSkill={first}\r\n        top={top}\r\n        left={left}\r\n        lineColor={lineColor}\r\n        skillColor={skillColor}\r\n        onSelect={handleSelectSkill}\r\n        visual={visual}\r\n      />\r\n    );\r\n  }, [visual, handleSelectSkill]);\r\n\r\n  const generateNodes = useCallback((\r\n    item,\r\n    top,\r\n    left,\r\n    parentPosition,\r\n    skills,\r\n    lineColor,\r\n    skillColor\r\n  ) => {\r\n    if (item.nodes && item.nodes.length > 0) {\r\n      let topNode = top;\r\n      let leftNode = left;\r\n      let parentPositionNode = parentPosition;\r\n      item.nodes.forEach((item) => {\r\n        topNode += addTop(item.position, parentPositionNode, item.id);\r\n        leftNode += addLeft(item.position, parentPositionNode, item.id);\r\n        skills.push(\r\n          getSkill(item, topNode, leftNode, lineColor, skillColor, false)\r\n        );\r\n        parentPositionNode = item.position;\r\n        generateNodes(\r\n          item,\r\n          topNode,\r\n          leftNode + 30,\r\n          parentPositionNode,\r\n          skills,\r\n          lineColor,\r\n          skillColor\r\n        );\r\n      });\r\n    }\r\n    return skills;\r\n  }, [getSkill]);\r\n\r\n  const generateMainBranch =  useCallback((\r\n    items,\r\n    lineColor,\r\n    skillColor,\r\n    topInit,\r\n    leftInit\r\n  ) => {\r\n    let top = topInit;\r\n    let left = leftInit;\r\n    let parentPosition = null;\r\n    let first = true;\r\n    let skills = [];\r\n\r\n    items.forEach((item) => {\r\n      top += addTop(item.position, parentPosition, item.id);\r\n      left += addLeft(item.position, parentPosition, item.id);\r\n      parentPosition = item.position;\r\n\r\n      skills.push(getSkill(item, top, left, lineColor, skillColor, first));\r\n      skills = generateNodes(\r\n        item,\r\n        top + 30,\r\n        left + 15,\r\n        parentPosition,\r\n        skills,\r\n        lineColor,\r\n        skillColor\r\n      );\r\n    });\r\n    return skills;\r\n  }, [generateNodes, getSkill]);\r\n\r\n  const renderSkillTree = useCallback(() => {\r\n    if (data && character) {\r\n      const {\r\n        itemsRoot,\r\n        itemsFirst,\r\n        itemsSecond,\r\n        itemsThird,\r\n        itemsFourth,\r\n        lineColor,\r\n        skillColor,\r\n      } = data;\r\n      let skills = generateMainBranch(itemsFirst, lineColor, skillColor, 0);\r\n      skills = [\r\n        ...generateMainBranch(itemsRoot, lineColor, skillColor, -385, 450),\r\n        ...generateMainBranch(itemsFirst, lineColor, skillColor, 0, 0),\r\n        ...generateMainBranch(itemsSecond, lineColor, skillColor, 0, 450),\r\n        ...generateMainBranch(itemsThird, lineColor, skillColor, 0, 480),\r\n        ...generateMainBranch(itemsFourth, lineColor, skillColor, 0, 900),\r\n      ];\r\n      setCurrentSkills(skills);\r\n    }\r\n  }, [character, data, generateMainBranch]);\r\n\r\n  useEffect(() => {\r\n    renderSkillTree();\r\n  }, [renderSkillTree]);\r\n\r\n  return (\r\n    currentSkills &&\r\n    currentSkills.length && (\r\n      <div style={{ margin: \"0 auto\", width: \"1000px\" }}>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              paddingTop: \"350px\",\r\n            }}\r\n          >\r\n            <RootStyled>\r\n              <Line\r\n                top={-414}\r\n                left={451}\r\n                color={rootLineColor}\r\n                rotation={90}\r\n                translate={\"0,0\"}\r\n                length={903}\r\n              />\r\n            </RootStyled>\r\n            <div style={{ position: \"relative\" }} id=\"container\">\r\n              {currentSkills}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nSkillTree.propTypes = {\r\n  character: PropTypes.string,\r\n  visual: PropTypes.bool,\r\n  points: PropTypes.number,\r\n};\r\n\r\nexport default SkillTree;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}